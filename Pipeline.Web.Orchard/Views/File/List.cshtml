@using Pipeline.Web.Orchard.Models
@model IEnumerable<PipelineFilePart>
@{
    Layout.Title = "Pipeline Files";
    Style.Require("jQueryColorBox");
    Script.Require("jQuery").AtHead();
    Script.Require("jQueryColorBox").AtHead();
    Script.Require("jQueryFileUpload").AtHead();

    var returnUrl = Request["ReturnUrl"];
    var hasReturnUrl = !string.IsNullOrEmpty(returnUrl);
}
<style type="text/css">

    .fileinput-button {
        position: relative;
        overflow: hidden;
        display: inline-block;
    }

    .fileinput-button input {
        position: absolute;
        top: 0;
        right: 0;
        margin: 0;
        opacity: 0;
        -ms-filter: 'alpha(opacity=0)';
        font-size: 200px;
        direction: ltr;
        cursor: pointer;
    }

</style>
<script type="text/javascript">
    //<!--
    $(document).ready(function () {

        function removeMessages() {
            $(".zone-messages").fadeOut().hide();
        }

        setTimeout(removeMessages, 5000);

        $(".view").colorbox({ iframe: true, width: "80%", height: "80%" });

        $("#fileupload").fileupload({
            url: '@Url.Action("Upload", new { area = Pipeline.Web.Orchard.Common.ModuleName })',
            formData: {
                __RequestVerificationToken: '@Html.AntiForgeryTokenValueOrchard()'
            },
            dataType: "html",
            done: function(e, data) {
                window.location = '@Url.Action("List", new { area = Pipeline.Web.Orchard.Common.ModuleName })' + '?ReturnUrl=@returnUrl';
            },
            progressall: function (e, data) {
                var progress = data.loaded / data.total * 100;
                $("#progress .progress-bar").css("width", progress + "%");
            }
        });

    });
    //-->
</script>

<div class="row">
    <div class="col-md-4">
        <span class="btn btn-primary btn-xs fileinput-button">
            <i class="glyphicon glyphicon-plus"></i>
            <span>Add</span>
            <!-- The file input field used as target for the file upload widget -->
            <input id="fileupload" type="file" name="files[]">
        </span>
    </div>
    <div class="col-md-8">
        <div id="progress" class="progress">
            <div class="progress-bar progress-bar-success"></div>
        </div>
        <!-- The container for the uploaded files -->
        <div id="files" class="files"></div>
    </div>
</div>

<table class="table table-condensed table-hover" style="font-size: smaller;">
    <thead>
    <tr>
        @if (hasReturnUrl) {
            <th>&nbsp;</th>
        }
        @*<th>
                @{
                    using (Html.BeginFormAntiForgeryPost(Url.Action("Upload", new { area = Pipeline.Web.Orchard.Common.ModuleName }), FormMethod.Post, new { enctype = "multipart/form-data" })) {
                        @Html.ValidationSummary();
                        <span class="btn btn-default btn-file btn-xs">
                            Browse <input name="file" type="file">
                        </span>

                        <button id="upload-file" type="submit" class="btn btn-xs btn-disabled" disabled="disabled">
                            <span class="glyphicon glyphicon-upload"></span> Upload
                        </button>
                    }
                }    
            </th>*@
        <th>Id</th>
        <th>File</th>
        <th>Tags</th>
        <th>Created On</th>
        <th>Action</th>
    </tr>
    </thead>
    <tbody>
        @foreach (var file in Model) {
            <tr class="">
                @if (hasReturnUrl) {
                    <td>
                        <button type="button" class="btn btn-primary btn-xs" onclick="javascript: window.location = '@(returnUrl + (returnUrl.Contains('?') ? "&" : "?") + "InputFileId=" + file.Id)';">
                            <span class="glyphicon glyphicon-ok-circle"></span> Select
                        </button>
                    </td>
                }
                <td>@file.Id</td>
                <td>@file.FileName()</td>
                <td>
                    <span class="label @(file.Direction.Equals("Out") ? "label-warning" : "label-success")">@file.Direction</span>
                    @if (file.CurrentTags().Any()) {
                        foreach (var tag in file.CurrentTags()) {
                            <span class="label label-info">@tag</span>
                        }
                    }
                </td>
                <td>@(TimeZoneInfo.ConvertTimeFromUtc(file.CreatedUtc(), WorkContext.CurrentTimeZone))</td>
                <td>
                    <div class="btn-group btn-group-xs" role="group" aria-label="...">

                        <button type="button" class="btn btn-info btn-xs" title="Download" onclick="window.open('@Url.Action("File/Download", "File", new {id = @file.Id})', '_self');">
                            <span class="glyphicon glyphicon-download"></span> 
                        </button>

                        <button @*disabled="@(!file.MimeType().StartsWith("text"))"*@ title="Open" type="button" class="btn btn-warning btn-xs view" href="@Url.Action("File/View", "File", new {id = @file.Id})">
                            <span class="glyphicon glyphicon-eye-open"></span>
                        </button>

                        <button type="button" class="btn btn-danger btn-xs" title="Delete" onclick="window.open('@Url.Action("File/Delete", "File", new {id = @file.Id})', '_self');">
                            <span class="glyphicon glyphicon-trash"></span> 
                        </button>

                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

