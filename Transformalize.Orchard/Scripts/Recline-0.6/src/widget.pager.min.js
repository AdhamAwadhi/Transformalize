this.recline=this.recline||{};this.recline.View=this.recline.View||{},function(n,t){"use strict";t.Pager=Backbone.View.extend({className:"recline-pager",template:'     <div class="pagination">       <ul>         <li class="prev action-pagination-update"><a href="">&laquo;<\/a><\/li>         <li class="active"><label for="from">From<\/label><a><input name="from" type="text" value="{{from}}" /> &ndash; <label for="to">To<\/label><input name="to" type="text" value="{{to}}" /> <\/a><\/li>         <li class="next action-pagination-update"><a href="">&raquo;<\/a><\/li>       <\/ul>     <\/div>   ',events:{"click .action-pagination-update":"onPaginationUpdate","change input":"onFormSubmit"},initialize:function(){_.bindAll(this,"render");this.listenTo(this.model.queryState,"change",this.render);this.render()},onFormSubmit:function(n){var u;n.preventDefault();var t=parseInt(this.$el.find('input[name="from"]').val())-1,r=parseInt(this.$el.find('input[name="to"]').val())-1,i=this.model.recordCount-1;this.model.queryState.get("from")!=t?this.model.queryState.set({from:Math.min(i,Math.max(t,0))}):this.model.queryState.get("to")!=r&&(u=Math.min(i,Math.max(r,0)),this.model.queryState.set({size:Math.min(i+1,Math.max(u-t+1,1))}))},onPaginationUpdate:function(t){t.preventDefault();var e=n(t.target),i=0,r=this.model.queryState.get("from"),f=this.model.queryState.get("size"),u=!1;e.parent().hasClass("prev")?(i=Math.max(r-Math.max(0,f),0),u=i!=r):(i=Math.max(r+f,0),u=i<this.model.recordCount);u&&this.model.queryState.set({from:i})},render:function(){var n=this.model.toJSON(),t=parseInt(this.model.queryState.get("from")),i;return n.from=t+1,n.to=Math.min(t+this.model.queryState.get("size"),this.model.recordCount),i=Mustache.render(this.template,n),this.$el.html(i),this}})}(jQuery,recline.View);
//# sourceMappingURL=widget.pager.min.js.map
