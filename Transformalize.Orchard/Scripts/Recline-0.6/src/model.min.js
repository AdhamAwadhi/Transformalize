this.recline=this.recline||{};this.recline.Model=this.recline.Model||{},function(n){"use strict";var t=typeof jQuery!="undefined"&&jQuery.Deferred||_.Deferred;n.Dataset=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){var t=this;_.bindAll(this,"query");this.backend=null;this.get("backend")?this.backend=this._backendFromString(this.get("backend")):this.get("records")&&(this.backend=recline.Backend.Memory);this.fields=new n.FieldList;this.records=new n.RecordList;this._changes={deletes:[],updates:[],creates:[]};this.facets=new n.FacetList;this.recordCount=null;this.queryState=new n.Query;this.queryState.bind("change facet:add",function(){t.query()});this._store=this.backend;this._handleResult=this.backend!=null&&_.has(this.backend,"handleQueryResult")?this.backend.handleQueryResult:this._handleQueryResult;this.backend==recline.Backend.Memory&&this.fetch()},sync:function(n,t,i){return this.backend.sync(n,t,i)},fetch:function(){function r(t){var u=n.get("fields")||t.fields,r=n._normalizeRecordsAndFields(t.records,u);t.useMemoryStore&&(n._store=new recline.Backend.Memory.Store(r.records,r.fields));n.set(t.metadata);n.fields.reset(r.fields);n.query().done(function(){i.resolve(n)}).fail(function(n){i.reject(n)})}var n=this,i=new t;return this.backend!==recline.Backend.Memory?this.backend.fetch(this.toJSON()).done(r).fail(function(n){i.reject(n)}):r({records:this.get("records"),fields:this.get("fields"),useMemoryStore:!0}),i.promise()},_normalizeRecordsAndFields:function(n,t){if(!t&&n&&n.length>0&&(n[0]instanceof Array?(t=n[0],n=n.slice(1)):t=_.map(_.keys(n[0]),function(n){return{id:n}})),t&&t.length>0&&(t[0]===null||typeof t[0]!="object")){var i={};t=_.map(t,function(n){n=n===null?"":n.toString();var t=n.replace(/^\s+|\s+$/g,"");for(t===""&&(t="_noname_",n=t);t in i;)i[n]+=1,t=n+i[n];return n in i||(i[n]=0),{id:t}})}return n&&n.length>0&&n[0]instanceof Array&&(n=_.map(n,function(n){var i={};return _.each(t,function(t,r){i[t.id]=n[r]}),i})),{fields:t,records:n}},save:function(){var n=this;return this._store.save(this._changes,this.toJSON())},query:function(i){var r=this,u=new t,f,e;return this.trigger("query:start"),i&&(f=i,i instanceof n.Query&&(f=i.toJSON()),this.queryState.set(f,{silent:!0})),e=this.queryState.toJSON(),this._store.query(e,this.toJSON()).done(function(n){r._handleResult(n);r.trigger("query:done");u.resolve(r.records)}).fail(function(n){r.trigger("query:fail",n);u.reject(n)}),u.promise()},_handleQueryResult:function(t){var i=this,r,u;i.recordCount=t.total;r=_.map(t.hits,function(t){var r=new n.Record(t);return r.fields=i.fields,r.bind("change",function(n){i._changes.updates.push(n.toJSON())}),r.bind("destroy",function(n){i._changes.deletes.push(n.toJSON())}),r});i.records.reset(r);t.facets&&(u=_.map(t.facets,function(t,i){return t.id=i,new n.Facet(t)}),i.facets.reset(u))},toTemplateJSON:function(){var n=this.toJSON();return n.recordCount=this.recordCount,n.fields=this.fields.toJSON(),n},getFieldsSummary:function(){var u=this,i=new n.Query,r;return i.set({size:0}),this.fields.each(function(n){i.addFacet(n.id)}),r=new t,this._store.query(i.toJSON(),this.toJSON()).done(function(t){t.facets&&_.each(t.facets,function(t,i){t.id=i;var r=new n.Facet(t);u.fields.get(i).facets.reset(r)});r.resolve(t)}),r.promise()},recordSummary:function(n){return n.summary()},_backendFromString:function(n){var t=null;return recline&&recline.Backend&&_.each(_.keys(recline.Backend),function(i){i.toLowerCase()===n.toLowerCase()&&(t=recline.Backend[i])}),t}});n.Record=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){_.bindAll(this,"getFieldValue")},getFieldValue:function(n){var t=this.getFieldValueUnrendered(n);return n&&!_.isUndefined(n.renderer)&&(t=n.renderer(t,n,this.toJSON())),t},getFieldValueUnrendered:function(n){if(!n)return"";var t=this.get(n.id);return n.deriver&&(t=n.deriver(t,n,this)),t},summary:function(){var t=this,n='<div class="recline-record-summary">';return this.fields.each(function(i){i.id!="id"&&(n+='<div class="'+i.id+'"><strong>'+i.get("label")+"<\/strong>: "+t.getFieldValue(i)+"<\/div>")}),n+="<\/div>"},fetch:function(){},save:function(){},destroy:function(){this.trigger("destroy",this)}});n.RecordList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:n.Record});n.Field=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:{label:null,type:"string",format:null,is_derived:!1},initialize:function(t,i){if("0"in t)throw new Error("Looks like you did not pass a proper hash with id to Field constructor");this.attributes.label===null&&this.set({label:this.id});this.attributes.type.toLowerCase()in this._typeMap&&(this.attributes.type=this._typeMap[this.attributes.type.toLowerCase()]);i&&(this.renderer=i.renderer,this.deriver=i.deriver);this.renderer||(this.renderer=this.defaultRenderers[this.get("type")]);this.facets=new n.FacetList},_typeMap:{text:"string",double:"number",float:"number",numeric:"number",int:"integer",datetime:"date-time",bool:"boolean",timestamp:"date-time",json:"object"},defaultRenderers:{object:function(n){return JSON.stringify(n)},geo_point:function(n){return JSON.stringify(n)},number:function(n,t){var i=t.get("format");return i==="percentage"?n+"%":n},string:function(n,t){var i=t.get("format"),r;return i==="markdown"?typeof Showdown!="undefined"?(r=new Showdown.converter,out=r.makeHtml(n)):n:i=="plain"?n:(n&&typeof n=="string"&&(n=n.replace(/(https?:\/\/[^ ]+)/g,'<a href="$1">$1<\/a>')),n)}}});n.FieldList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:n.Field});n.Query=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{size:100,from:0,q:"",facets:{},filters:[]}},_filterTemplates:{term:{type:"term",field:"",term:""},range:{type:"range",from:"",to:""},geo_distance:{type:"geo_distance",distance:10,unit:"km",point:{lon:0,lat:0}}},addFilter:function(n){var t=JSON.parse(JSON.stringify(n)),i;_.keys(n).length<=3&&(t=_.defaults(t,this._filterTemplates[n.type]));i=this.get("filters");i.push(t);this.trigger("change:filters:new-blank")},replaceFilter:function(n){var i=this.get("filters"),t=-1;_.each(this.get("filters"),function(i,r){n.field==i.field&&(t=r)});t>=0&&(i.splice(t,1),this.set({filters:i}));this.addFilter(n)},updateFilter:function(){},removeFilter:function(n){var t=this.get("filters");t.splice(n,1);this.set({filters:t});this.trigger("change")},addFacet:function(n,t,i){var r=this.get("facets");_.contains(_.keys(r),n)||(r[n]={terms:{field:n}},_.isUndefined(t)||(r[n].terms.size=t),this.set({facets:r},{silent:!0}),i||this.trigger("facet:add",this))},addHistogramFacet:function(n){var t=this.get("facets");t[n]={date_histogram:{field:n,interval:"day"}};this.set({facets:t},{silent:!0});this.trigger("facet:add",this)},removeFacet:function(n){var t=this.get("facets");_.contains(_.keys(t),n)&&(delete t[n],this.set({facets:t},{silent:!0}),this.trigger("facet:remove",this))},clearFacets:function(){var n=this.get("facets");_.each(_.keys(n),function(t){delete n[t]});this.trigger("facet:remove",this)},refreshFacets:function(){this.trigger("facet:add",this)}});n.Facet=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{_type:"terms",total:0,other:0,missing:0,terms:[]}}});n.FacetList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:n.Facet});n.ObjectState=Backbone.Model.extend({})}(this.recline.Model);
//# sourceMappingURL=model.min.js.map
