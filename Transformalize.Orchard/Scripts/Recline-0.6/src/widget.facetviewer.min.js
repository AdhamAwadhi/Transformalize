this.recline=this.recline||{};this.recline.View=this.recline.View||{},function(n,t){"use strict";t.FacetViewer=Backbone.View.extend({className:"recline-facet-viewer",template:'     <div class="facets">       {{#facets}}       <div class="facet-summary" data-facet="{{id}}">         <h3>           {{id}}         <\/h3>         <ul class="facet-items">         {{#terms}}           <li><a class="facet-choice js-facet-filter" data-value="{{term}}" href="#{{term}}">{{term}} ({{count}})<\/a><\/li>         {{/terms}}         {{#entries}}           <li><a class="facet-choice js-facet-filter" data-value="{{time}}">{{term}} ({{count}})<\/a><\/li>         {{/entries}}         <\/ul>       <\/div>       {{/facets}}     <\/div>   ',events:{"click .js-facet-filter":"onFacetFilter"},initialize:function(){_.bindAll(this,"render");this.listenTo(this.model.facets,"all",this.render);this.listenTo(this.model.fields,"all",this.render);this.render()},render:function(){var n={fields:this.model.fields.toJSON()},t;n.facets=_.map(this.model.facets.toJSON(),function(n){return n._type==="date_histogram"&&(n.entries=_.map(n.entries,function(n){return n.term=new Date(n.time).toDateString(),n})),n});t=Mustache.render(this.template,n);this.$el.html(t);this.model.facets.length>0?this.$el.show():this.$el.hide()},onHide:function(n){n.preventDefault();this.$el.hide()},onFacetFilter:function(t){t.preventDefault();var i=n(t.target),r=i.closest(".facet-summary").attr("data-facet"),u=i.attr("data-value");this.model.queryState.addFilter({type:"term",field:r,term:u});this.model.query()}})}(jQuery,recline.View);
//# sourceMappingURL=widget.facetviewer.min.js.map
