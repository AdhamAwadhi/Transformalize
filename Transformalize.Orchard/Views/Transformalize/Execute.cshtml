@model Transformalize.Orchard.Models.ExecuteViewModel
@{
    Layout.Title = "Results";
    Script.Require("jQuery").AtHead();
}
<script type="text/javascript">
    //<!--
    $(document).ready(function() {
        function removeMessages() {
            $(".zone-messages").fadeOut().hide();
        }
        setTimeout(removeMessages, 8000);
    });
    //-->
</script>

@if (Model.DisplayLog) {
    <h3>Log</h3>
    <div class="table-responsive">
        <table class="table table-condensed table-hover table-striped">
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Level</th>
                    <th>Process</th>
                    <th>Entity</th>
                    <th>Message</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var fields in Model.TransformalizeResponse.Log.Select(line => line.Split("|".ToCharArray()).Select(f => f.TrimEnd('.')).ToArray())) {
                    string color;
                    switch (fields[2].Trim()) {
                        case "Error":
                            color = "danger";
                            break;
                        case "Warn ":
                            color = "warning";
                            break;
                        default:
                            color = "";
                            break;
                    }
                    <tr class="@color">
                        @foreach (var field in fields) {
                            <td>@field</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@foreach (var process in Model.TransformalizeResponse.Processes) {
    var results = process.Results.ToArray();
    if(results.Length > 0) {
        var fields = process.OutputFields().ToArray();
        <h3>@process.Name Results</h3>
        <div class="table-responsive">
            <table class="table table-condensed table-hover table-striped">
                <thead>
                    <tr>
                        @foreach (var field in fields) {
                            <th>@field.Label</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var row in results) {
                        <tr>
                            @foreach (var field in fields) {
                                <td>
                                    @if (field.SimpleType.StartsWith("bool")) {
                                        if ((bool)row[field.Alias]) {
                                            <span style="color:#73a839;" class="glyphicon glyphicon-ok"></span>    
                                        } else {
                                            <span style="color:#c71c22;" class="glyphicon glyphicon-remove"></span>    
                                        }
                                    } else {
                                        @(field.Raw ? Html.Raw(row[field.Alias]) : row[field.Alias])
                                    }
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}

