<?xml version="1.0"?>
<configuration>
  
  <configSections>
    <section name="transformalize" type="Transformalize.Configuration.TransformalizeConfiguration, Transformalize"/>
    <section name="nlog" type="Transformalize.Libs.NLog.Config.ConfigSectionHandler, Transformalize"/>
  </configSections>

  <transformalize>
    <processes>

      <add name="Test">

        <providers>
          <add name="sqlserver" type="System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
          <add name="mysql" type="MySql.Data.MySqlClient.MySqlConnection, MySql.Data"></add>
        </providers>
        
        <connections>
          <add name="input" value="Server=localhost;Database=TestInput;Trusted_Connection=True;"/>
          <add name="output" value="Server=localhost;Database=TestOutput;Trusted_Connection=True;"/>
        </connections>

        <scripts path="Scripts">
          <add name="test" file="test.js"></add>
        </scripts>

        <templates path="Templates">
          <add name="double" file="double.cshtml"></add>
          <add name="test" file="test.cshtml">
            <settings>
              <add name="Answer" value="No"></add>
            </settings>
            <actions>
              <add action="copy" file="c:\temp\test.txt"></add>
              <add action="open" file="c:\temp\test.txt"></add>
            </actions>
          </add>
        </templates>

        <entities>

          <add name="OrderDetail" connection="input" version="RowVersion">
            <primaryKey>
              <add name="OrderDetailKey" type="System.Int32"></add>
            </primaryKey>
            <fields>
              <add name="OrderKey" type="system.Int32"></add>
              <add name="ProductKey" type="System.Int32"></add>
              <add name="Qty" alias="Quantity" type="System.Int32"></add>
              <add name="Price" type="System.Decimal" precision="10" scale="5"></add>
              <add name="Properties" type="System.Xml">
                <transforms>
                  <add method="fromXml">
                    <fields>
                      <add name="Color"></add>
                      <add name="Size"></add>
                      <add name="Gender"></add>
                    </fields>
                  </add>
                </transforms>
              </add>
              <add name="RowVersion" type="RowVersion" length="8" input="false" output="false"></add>
            </fields>
          </add>

          <add name="Order" connection="input" version="RowVersion">
            <primaryKey>
              <add name="OrderKey" type="System.Int32"></add>
            </primaryKey>
            <fields>
              <add name="CustomerKey" type="System.Int32"></add>
              <add name="OrderDate" type="System.DateTime"></add>
              <add name="RowVersion" type="RowVersion" length="8" input="false" output="false"></add>
            </fields>
          </add>

          <add name="Customer" connection="input" version="RowVersion">
            <primaryKey>
              <add name="CustomerKey" type="System.Int32"></add>
            </primaryKey>
            <fields>
              <add name="First" alias="FirstName" length="50">
                <transforms>
                  <add method="map" map="FirstNames"></add>
                </transforms>
              </add>
              <add name="Last" alias="LastName" length="50"></add>
              <add name="Address" length="100">
              </add>
              <add name="City" length="50">
                <transforms>
                  <add method="insert" index="0" value="Town ofs "></add>
                  <add method="remove" start-index="7" length="1"></add>
                  <add method="replace" old-value="Town" new-value="City"></add>
                  <add method="trimStart" trim-chars="Ci"></add>
                </transforms>
              </add>
              <add name="State" length="4">
                <transforms>
                  <add method="template" template="@Double(State)">
                    <templates>
                      <add name="double"></add>
                    </templates>
                  </add>
                </transforms>
              </add>
              <add name="Country" length="2"></add>
              <add name="RowVersion" type="RowVersion" length="8" input="false"></add>
            </fields>
          </add>

          <add name="Product" connection="input" version="RowVersion">
            <primaryKey>
              <add name="ProductKey" type="System.Int32"></add>
            </primaryKey>
            <fields>
              <add name="Name" alias="ProductName" length="100" default="None">
                <transforms>
                  <add method="javascript" script="if(ProductName.length == 8) { '8 chars not allowed!' } else { ProductName };" />
                </transforms>
              </add>
              <add name="RowVersion" type="RowVersion" length="8" input="false" output="false"></add>
            </fields>
          </add>

        </entities>

        <relationships>
          <add leftEntity="OrderDetail" rightEntity="Order">
            <join>
              <add leftField="OrderKey" rightField="OrderKey"/>
            </join>
          </add>
          <add leftEntity="OrderDetail" rightEntity="Product">
            <join>
              <add leftField="ProductKey" rightField="ProductKey"/>
            </join>
          </add>
          <add leftEntity="Order" rightEntity="Customer">
            <join>
              <add leftField="CustomerKey" rightField="CustomerKey"/>
            </join>
          </add>
        </relationships>

        <maps>
          <add name="FirstNames">
            <items>
              <add from="Cha" to="Chuck" operator="StartsWith"></add>
              <add from="topher" to="Chris" operator="EndsWith"></add>
              <add from="Thomas" to="Tom"></add>
              <add from="*" to="John"></add>
            </items>
          </add>
        </maps>

        <calculated-fields>
          
          <add name="Result" type="System.Byte">
            <transforms>
              <add method="javascript" script="if(LastName == 'Newman' &amp;&amp; ProductName == 'Resharper') { 1 } else { 2 };">
                <parameters>
                  <add entity="Customer" field="LastName"></add>
                  <add entity="Product" field="ProductName"></add>
                </parameters>
              </add>              
            </transforms>            
          </add>

        </calculated-fields>

      </add>

    </processes>
  </transformalize>
  
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <targets async="false">
      <target name="file" xsi:type="File" fileName="${basedir}/nlog/${date:format=yyyy}/${date:format=MM}/${date:format=dd}/Transformalize.log" layout="${date:format=HH\:mm\:ss} | ${level} | ${gdc:item=process} | ${gdc:item=entity} |${message}"/>
      <target xsi:type="BufferingWrapper" name="mailBuffer" slidingTimeout="True" bufferSize="100" flushTimeout="120000">
        <target name="mail" xsi:type="Mail" smtpServer="mail.mwf.local" from="dnewman@scope-services.com" subject="Transformalize Error!" to="dnewman@scope-services.com"/>
      </target>
      <target name="console" xsi:type="ColoredConsole" layout="${date:format=HH\:mm\:ss} | ${level} | ${gdc:item=process} | ${gdc:item=entity} | ${message}"/>
    </targets>
    <rules>
      <logger name="*" minlevel="Info" writeTo="console"/>
      <logger name="*" minlevel="Info" writeTo="file"/>
      <logger name="*" minlevel="Error" writeTo="mail"/>
    </rules>
  </nlog>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
  </startup>

</configuration>
