<?xml version="1.0"?>
<transformalize>
  <processes>

    <add name="Test">

      <connections>
        <add name="input" database="TestInput"/>
        <add name="output" database="TestOutput"/>
      </connections>

      <scripts path="Scripts">
        <add name="test" file="test.js"></add>
      </scripts>

      <templates path="Templates">
        <add name="double" file="double.cshtml"></add>
        <add name="solr-data-handler" file="solr-data-handler.cshtml" cache="true">
          <actions>
            <add action="copy" file="C:\Solr\Test\conf\data-config.xml"/>
          </actions>
        </add>
        <add name="solr-schema" file="solr-schema.cshtml" cache="true">
          <actions>
            <add action="copy" file="C:\Solr\Test\conf\schema.xml"/>
            <add action="open" file="C:\Solr\Test\conf\schema.xml"/>
          </actions>
        </add>
      </templates>

      <search-types>
        <add name="default"/>
        <add name="facet" analyzer="lowercase" store="true" index="true"/>
        <add name="standard" analyzer="standard_lowercase" store="false" index="true"/>
      </search-types>

      <entities>

        <add name="OrderDetail" connection="input" version="RowVersion">
          <fields>
            <add name="OrderDetailKey" type="int" primary-key="true"/>
            <add name="OrderKey" type="int"></add>
            <add name="ProductKey" type="int"></add>
            <add name="Qty" alias="Quantity" type="int"></add>
            <add name="Price" type="decimal" precision="10" scale="5"></add>
            <add name="Properties" type="xml">
              <transforms>
                <add method="fromXml">
                  <fields>
                    <add name="Color"></add>
                    <add name="Size"></add>
                    <add name="Gender"></add>
                  </fields>
                </add>
              </transforms>
            </add>
            <add name="RowVersion" alias="OrderDetailRowVersion" type="RowVersion" length="8" search-type="none"></add>
          </fields>
        </add>

        <add name="Order" connection="input" version="RowVersion">
          <fields>
            <add name="OrderKey" type="int" primary-key="true"/>
            <add name="CustomerKey" type="int"></add>
            <add name="OrderDate" type="datetime"/>
            <add name="RowVersion" alias="OrderRowVersion" type="RowVersion" length="8" search-type="none"></add>
          </fields>
          <calculated-fields>
            <add name="OrderDateIsInRange" type="bool">
               <transforms>
                <add method="datetimerange"
                     lower-bound="2010-01-01"
                     upper-bound="2012-10-31"
                     parameter="OrderDate"/>
              </transforms>             
            </add>
          </calculated-fields>
        </add>

        <add name="Customer" connection="input" version="RowVersion">
          <fields>
            <add name="CustomerKey" type="int" primary-key="true"/>
            <add name="First" alias="FirstName" length="50">
              <transforms>
                <add method="map" map="FirstNames"/>
              </transforms>
            </add>

            <add name="Last" alias="LastName" length="50">
              <transforms>
                <add method="containscharacters" characters="abc" contains-characters="All" />
              </transforms>
            </add>
            <add name="Address" length="100">
            </add>
            <add name="City" length="50">
              <transforms>
                <add method="insert" index="0" value="Town ofs "></add>
                <add method="remove" start-index="7" length="1"></add>
                <add method="replace" old-value="Town" new-value="City"></add>
                <add method="trimStart" trim-chars="Ci"></add>
              </transforms>
            </add>
            <add name="State" length="10">
              <transforms>
                <add method="template" template="@Double(Model.State)">
                  <templates>
                    <add name="double"></add>
                  </templates>
                </add>
              </transforms>
            </add>
            <add name="Country" length="10" />
            <add name="RowVersion" alias="CustomerRowVersion" type="RowVersion" length="8" search-type="none"></add>
          </fields>
          <calculated-fields>
            <add name="CountryIsUS" type="bool">
              <transforms>
                <add method="containscharacters" characters="US" contains-characters="All" parameter="Country" />
              </transforms>           
            </add>
            <add name="CountryInUsPtCi" type="bool">
              <transforms>
                <add method="domain" domain="US,PT,CI" parameter="Country"/>
              </transforms>
            </add>
          </calculated-fields>
          
        </add>

        <add name="Product" connection="input" version="RowVersion">
          <fields>
            <add name="ProductKey" type="int" primary-key="true"/>
            <add name="Name" alias="ProductName" length="100" default="None">
              <transforms>
                <add method="javascript" script="if(ProductName.length == 8) { '8 chars not allowed!' } else { ProductName };"/>
              </transforms>
            </add>
            <add name="RowVersion" alias="ProductRowVersion" type="RowVersion" length="8" search-type="none"></add>
          </fields>
        </add>

      </entities>

      <relationships>
        <add left-entity="OrderDetail" right-entity="Order">
          <join>
            <add left-field="OrderKey" right-field="OrderKey"/>
          </join>
        </add>
        <add left-entity="OrderDetail" right-entity="Product">
          <join>
            <add left-field="ProductKey" right-field="ProductKey"/>
          </join>
        </add>
        <add left-entity="Order" right-entity="Customer">
          <join>
            <add left-field="CustomerKey" right-field="CustomerKey"/>
          </join>
        </add>
      </relationships>

      <maps>
        <add name="FirstNames">
          <items>
            <add from="Cha" to="Chuck" operator="StartsWith"></add>
            <add from="topher" to="Chris" operator="EndsWith"></add>
            <add from="Thomas" to="Tom"></add>
            <add from="*" to="John"></add>
          </items>
        </add>
      </maps>

      <calculated-fields>

        <add name="Result" type="byte">
          <transforms>
            <add method="javascript" script="if(LastName == 'Newman' &amp;&amp; ProductName == 'Resharper') { 1 } else { 2 };">
              <parameters>
                <add entity="Customer" field="LastName"></add>
                <add entity="Product" field="ProductName"></add>
              </parameters>
            </add>
          </transforms>
        </add>

      </calculated-fields>

    </add>

    <add name="File">

      <connections>
        <add name="input" file="c:\temp\hellog.txt" provider="file"/>
        <add name="output" connection-string="Server=localhost;Database=TestOutput;Trusted_Connection=True;"/>
      </connections>

      <entities>
        <add name="log" connection="input">
          <fields>
            <add name="Line" length="512" output="false">
              <transforms>
                <add method="fromRegex" pattern="^(?&lt;Date&gt;.{23}).*(?&lt;Level&gt; INFO| DEBUG| WARN| ERROR| TRACE)(?&lt;Message&gt; +log - .*$)">
                  <fields>
                    <add name="Date" length="23">
                      <transforms>
                        <add method="replace" old-value="," new-value="."></add>
                      </transforms>
                    </add>
                    <add name="Level" length="10">
                      <transforms>
                        <add method="trim" trim-chars=" "></add>
                      </transforms>
                    </add>
                    <add name="Message" length="500">
                      <transforms>
                        <add method="trimStart" trim-chars="log -"/>
                        <add method="trimEnd" trim-chars=" "/>
                      </transforms>
                    </add>
                  </fields>
                </add>
              </transforms>
            </add>
          </fields>
        </add>
      </entities>
    </add>

    <add name="MyLogs">

      <connections>
        <add name="input" file="x.log" provider="file" delimiter="|"/>
        <add name="output" connection-string="Server=localhost;Database=TestOutput;Trusted_Connection=True;"/>
      </connections>

      <entities>
        <add name="TflLog" connection="input" version="HashCode">
          <fields>
            <add name="Process" input="false" default="DplGas" length="20"/>
            <add name="Time" length="8" variable-length="false"/>
            <add name="Level" length="5"/>
            <add name="Entity" length="30">
              <transforms>
                <add method="TrimEnd" trim-chars="."></add>
              </transforms>
            </add>
            <add name="Message" length="512"/>
          </fields>
          <calculated-fields>
            <add name="HashText" length="550" output="false">
              <transforms>
                <add method="Concat">
                  <parameters>
                    <add field="Time"></add>
                    <add field="Process"></add>
                    <add field="Entity"></add>
                    <add field="Message"></add>
                  </parameters>
                </add>
              </transforms>
            </add>
            <add name="HashCode" type="int" input="false" primary-key="true">
              <transforms>
                <add method="GetHashCode" parameter="HashText"></add>
              </transforms>
            </add>
          </calculated-fields>
        </add>
      </entities>
    </add>

  </processes>
</transformalize>
